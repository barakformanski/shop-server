{"version":3,"sources":["component/Context.js","component/header/Header.js","component/product/product.js","component/cartwithproducts/CartWithProducts.js","component/uploadComponent/Uploadimage.js","component/cart/cart.js","component/products/Products.js","pages/adminPage/AdminPage.js","component/login/Login.js","pages/productPage.js","component/search/Search.js","component/app/app.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Provider","Consumer","Header","useContext","name","PREFIX","userLogin","useState","buttonText","setButtonText","useEffect","className","to","Product","props","quantity","setquantity","checkIfClicked","setCheckIfClicked","cartCount","setCartCount","itemsInCart","setItemsInCart","email","password","cartId","setCartId","userAndProduct","Number","productTitle","title","removeFromCart","filter","productToRemoveFromCart","id","price","src","onClick","console","log","axios","post","then","res","data","concat","image","productIndex","findIndex","product","newItemsInCartArray","CartWithProducts","UploadImage","userImage","setUserImage","fileInput","useRef","uploadImage","a","uploadedFile","current","files","params","filename","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","type","ref","Cart","map","itemInCart","Products","products","setProducts","userSearch","deletedProduct","newProduct","setNewProduct","get","productsarray","socket","socketIOClient","on","updatedProducts","slice","key","_id","description","Option","Select","formItemLayout","wrapperCol","span","validateMessages","required","AdminPage","setProductTitle","newProductImage","setNewProductImage","onFinish","values","pdf_description","idTodelete","idToUpdate","selectedProductToDelete","setSelectedProductToDelete","dir","Item","label","hasFeedback","rules","message","placeholder","onChange","value","delete","alert","size","initialValues","offset","htmlType","addProduct","Login","setEmail","setPassword","setName","setUserLogin","onSubmit","event","preventDefault","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","e","target","Button","block","disabled","length","ProductPage","chosenProduct","setChosenProduct","useParams","url","find","Search","Input","setUserSearch","suffix","AudioOutlined","style","fontSize","color","enterButton","onSearch","App","productsFromDB","count","setCount","setDeletedProduct","range","setRange","document","cookie","shopContext","loadProducts","getElementById","forEach","productLi","innerHTML","saveProducts","localStorage","setItem","JSON","stringify","getItem","parse","setTimeout","padding","currentCount","exact","path","defaultValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ada39eda.chunk.js","sourcesContent":["import React from 'react'\r\nconst Context = React.createContext({});\r\nexport const Provider = Context.Provider;\r\nexport const Consumer = Context.Consumer;\r\nexport default Context;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from '../Context';\r\n\r\n// import 'ant-design-pro/dist/ant-design-pro.css';\r\n// import Login from 'ant-design-pro/lib/Login';\r\n\r\n\r\n\r\nfunction Header() {\r\n    const { PREFIX,name, userLogin } = useContext(Context);\r\n    const [buttonText, setButtonText] = useState(\"הזדהה כלקוח\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userLogin) {\r\n            setButtonText(\"הזדהה כלקוח\");\r\n        }\r\n        else if (userLogin) {\r\n            if (name) {\r\n                setButtonText(name);\r\n            }\r\n            else {\r\n                setButtonText(\"לקוח לא מילא שם\")\r\n            }\r\n\r\n        }\r\n    }, [userLogin])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header_text\">welcome to the our digital shop!\r\n              <Link to={`/adminLogIn`}>\r\n                    <button className=\"login_button\">admin acces</button>\r\n                    {/* <Login /> */}\r\n                </Link>\r\n                <Link to={`/Login`}>\r\n                    <button className=\"Customer_login_button\">{buttonText}</button>\r\n                </Link>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Product.css\";\r\nimport Context from '../Context';\r\nimport axios from 'axios';\r\n// import Cart from \"../cart/cart\";\r\n// import Products from \"../products/Products.js\"\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst Product = (props) => {\r\n  const [quantity, setquantity] = useState(props.quantity);\r\n  const [checkIfClicked, setCheckIfClicked] = useState(true);\r\n  const [quantityInCart, setQuantityInCart] = useState(0);\r\n  const {\r\n    PREFIX,cartCount, setCartCount, itemsInCart, setItemsInCart, name, email, password, cartId, setCartId, userLogin\r\n  } = useContext(Context);\r\n\r\n  const userAndProduct = {\r\n    name: name,\r\n    email: email,\r\n    password: password,\r\n    cartId: Number,\r\n    productTitle: props.title\r\n  }\r\n\r\n  const add_to_cart = () => {\r\n    if (userLogin) {\r\n\r\n      console.log(\"user details arrived:\", name, email, password, cartId);\r\n      axios.post(`http://localhost:5000${PREFIX}/userCart`, userAndProduct).then((res) => {\r\n        console.log(\"responsed arrived\");\r\n        console.log(\"res: cartId:\", res.data);\r\n        // console.log(\"res.data:\", res.data);\r\n        // setCartId(res.data);\r\n      });\r\n    };\r\n\r\n    if (props.quantity) {\r\n      setCartCount(cartCount + 1)\r\n      setquantity(quantity - 1);\r\n\r\n      if (checkIfClicked === true) {\r\n\r\n        setItemsInCart(itemsInCart.concat([{ id: props.id, title: props.title, price: props.price, image: props.src, quantity: 1 }]));\r\n        setCheckIfClicked(false);\r\n\r\n      } else {\r\n\r\n        const productIndex = itemsInCart.findIndex(product => product.id === props.id);\r\n        let newItemsInCartArray = [...itemsInCart];\r\n        newItemsInCartArray[productIndex] = { ...newItemsInCartArray[productIndex], quantity: itemsInCart[productIndex].quantity + 1 };\r\n        setItemsInCart(newItemsInCartArray);\r\n\r\n      };\r\n\r\n    }\r\n  }\r\n  const remove_from_cart = () => {\r\n    if\r\n      (quantity + 1 === props.quantity) {\r\n\r\n      setCartCount(cartCount - 1)\r\n\r\n      removeFromCart()\r\n\r\n    }\r\n    else if\r\n      (quantity < props.quantity) {\r\n\r\n      setCartCount(cartCount - 1)\r\n      setquantity(quantity + 1);\r\n      const productIndex = itemsInCart.findIndex(product => product.id === props.id);\r\n      let newItemsInCartArray = [...itemsInCart];\r\n      newItemsInCartArray[productIndex] = { ...newItemsInCartArray[productIndex], quantity: itemsInCart[productIndex].quantity - 1 };\r\n      setItemsInCart(newItemsInCartArray);\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const removeFromCart = () => {\r\n    setItemsInCart(itemsInCart.filter((productToRemoveFromCart) =>\r\n      props.id !== productToRemoveFromCart.id,\r\n      setCheckIfClicked(true),\r\n      setquantity(quantity + 1)\r\n\r\n    ))\r\n  };\r\n  // מה שימוש של הuse efect הזה?\r\n  useEffect(() => {\r\n    setquantity(props.quantity);\r\n  }\r\n    , [props.quantity]\r\n  )\r\n  return (\r\n    <div>\r\n      <Link to={`/products/${props.id}`}>\r\n        <div>{props.title}</div>\r\n        <div>ש\"ח {props.price}</div>\r\n\r\n        <div>\r\n\r\n          <img src={props.src} />\r\n\r\n        </div>\r\n      </Link>\r\n      <div className=\"quantity\"> פריטים במלאי{quantity}</div>\r\n\r\n\r\n      <button onClick={add_to_cart\r\n      }>+</button>\r\n      <button onClick={remove_from_cart}>-</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\n// import React, { useContext } from \"react\";\r\n// import Context from '../Context';\r\nimport \"./CartWithProducts.css\"\r\n\r\nfunction CartWithProducts(props) {\r\n    console.log(\"props.id in cart\", props.quantity);\r\n    // const {\r\n    //     productsFromDB, products, setProducts, userSearch, setUserSearch, cartCount, setCartCount, itemsInCart, setItemsInCart\r\n    //   } = useContext(Context);\r\n    return (\r\n        <div className=\"productInCart\" id={props.id}>\r\n            <div>{props.title}</div>\r\n\r\n            <div>ש\"ח{props.price}</div>\r\n\r\n            <div>\r\n\r\n                <img src={props.src} />\r\n\r\n            </div>\r\n\r\n            <div className=\"quantityInProductInCart\">quantity: {props.quantity} </div>\r\n\r\n\r\n            {/* need to abale those buttons && update the quantity from <Cart/> */}\r\n            {/* <button onClick={add_to_cart, add_to_productsInCart}>add_to_cart</button>\r\n          <button onClick={remove_from_cart}>remove_from_cart</button> */}\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default CartWithProducts;","import React, { useState, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./uploadImage.css\"\r\nimport Context from '../Context';\r\n\r\nfunction UploadImage() {\r\n    const {\r\n        PREFIX,userImage, setUserImage\r\n    } = useContext(Context);\r\n\r\n    const fileInput = useRef();\r\n    const uploadImage = async () => {\r\n\r\n\r\n\r\n        const uploadedFile = fileInput.current;\r\n        axios.post(`http://localhost:5000${PREFIX}/upload`, uploadedFile.files[0], {\r\n            params: { filename: uploadedFile.files[0].name },\r\n            onUploadProgress: (progressEvent) => {\r\n                const percentCompleted = Math.round(\r\n                    (progressEvent.loaded * 100) / progressEvent.total\r\n                );\r\n                console.log(\"percentCompleted:\", percentCompleted);\r\n                setUserImage(`http://localhost:5000${PREFIX}/images/` + uploadedFile.files[0].name);\r\n            },\r\n        });\r\n        await console.log(userImage);\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" ref={fileInput} />\r\n\r\n            <button onClick={uploadImage}>העלה את התמונה שבחרת</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n// import Products from \"../products/Products.js\";\r\nimport \"./cart.css\";\r\nimport CartWithProdcts from \"../cartwithproducts/CartWithProducts.js\";\r\nimport UploadImage from \"../uploadComponent/Uploadimage.js\";\r\nimport Context from '../Context';\r\n\r\nfunction Cart(props) {\r\n  const {\r\n    cartCount, setCartCount, itemsInCart, userImage, setUserImage,\r\n  } = useContext(Context);\r\n\r\n  const defultCartImage = '../../images/cart.jpg';\r\n\r\n  console.log('itemsInCart:', itemsInCart);\r\n  return (\r\n    <div className=\"cart\">\r\n\r\n      <div className=\"cartHeader\">\r\n        <span>עגלת המוצרים שלך</span>\r\n        {userImage ?\r\n          < img src={userImage} />\r\n          :\r\n          <img className=\"userCartImage\" src={defultCartImage} />}\r\n\r\n        <div className=\"cartNumber\"> סך המוצרים בעגלה {cartCount}</div>\r\n        <div> <UploadImage /> </div>\r\n\r\n      </div>\r\n      <div className=\"productsInCart\">\r\n        <div>\r\n          {itemsInCart.map((itemInCart) =>\r\n            <CartWithProdcts\r\n              id={itemInCart.id}\r\n              title={itemInCart.title}\r\n              price={itemInCart.price}\r\n              src={itemInCart.image}\r\n              quantity={itemInCart.quantity}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./products.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport Product from \"../product/product.js\";\r\nimport axios from \"axios\";\r\nimport Cart from \"../cart/cart.js\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport Context from '../Context';\r\n\r\n\r\nconst Products = (props) => {\r\n  const {\r\n   PREFIX, products, setProducts, userSearch, deletedProduct, itemsInCart, setItemsInCart,\r\n    newProduct, setNewProduct, name, email, password\r\n  } = useContext(Context);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000${PREFIX}/products`)\r\n      .then((res) => {\r\n        const productsarray = res.data;\r\n        setProducts(productsarray);\r\n        console.log(\"costimer details:\", name, email, password);\r\n      });\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000${PREFIX}/products`)\r\n      .then((res) => {\r\n        const productsarray = res.data;\r\n        setProducts(productsarray);\r\n\r\n      });\r\n  }, [deletedProduct, newProduct,]);\r\n\r\n  console.log(\"userSearch:\", userSearch);\r\n\r\n\r\n  // search\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000${PREFIX}/products/?search=${userSearch}`)\r\n\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"userSearch:\", userSearch);\r\n\r\n        const products = res.data;\r\n        console.log(products);\r\n        setProducts(products);\r\n      });\r\n  }, [userSearch]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // const socket = socketIOClient(`http://localhost:5000${PREFIX}`);\r\n    const socket = socketIOClient(`http://localhost:5000`);\r\n    socket.on(\"product_updated\", (data) => {\r\n      console.log('data product to update:', data);\r\n      console.log(\"id to update:\", data.id);\r\n      console.log(\"new quantity\", data.quantity);\r\n      const updatedProducts = products.slice();\r\n      // const updatedProducts = [...Products];\r\n      console.log(\"updatedProducts array after product updated:\", updatedProducts);\r\n      const productIndex = updatedProducts.findIndex((product) => product.id === data.id);\r\n      updatedProducts[productIndex].quantity = data.quantity;\r\n      console.log(updatedProducts);\r\n      setProducts(updatedProducts);\r\n    });\r\n\r\n    socket.on(\"product_updated\", (data) => {\r\n      setProducts(data);\r\n\r\n    })\r\n\r\n  }, []);\r\n  return (\r\n    <div className=\"products\">\r\n\r\n\r\n      {\r\n        products\r\n          // .filter(\r\n          //   (product) =>\r\n          //     product.price >= props.range[0] && product.price <= props.range[1]\r\n          // )\r\n          .map((product) => (\r\n            <div className=\"product\" >\r\n              <Product\r\n                key={product._id}\r\n                id={product._id}\r\n                title={product.title}\r\n                price={product.price}\r\n                src={product.image}\r\n                quantity={product.quantity}\r\n                description={product.description}\r\n                itemsInCart={itemsInCart}\r\n                setItemsInCart={setItemsInCart}\r\n\r\n              />\r\n            </div>\r\n\r\n          ))\r\n      }\r\n\r\n      <Cart />\r\n\r\n\r\n    </div >\r\n  );\r\n};\r\nexport default Products;\r\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"./adminPage.css\";\r\nimport Products from \"../../component/products/Products\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Context from '../../component/Context.js';\r\nimport UploadImage from \"../../component/uploadComponent/Uploadimage.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Form, Input, InputNumber, Button, Upload, Select } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    wrapperCol: {\r\n        span: 5,\r\n    },\r\n};\r\n\r\nconst normFile = (e) => {\r\n\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n        console.log(\"a\");\r\n        return e;\r\n    }\r\n    console.log(\"b\");\r\n    console.log(\"name:\", e.file.name);\r\n\r\n    return e && e.fileList;\r\n\r\n};\r\n\r\n\r\nconst validateMessages = {\r\n    required: \"'${name}' זהו שדה חובה!\",\r\n};\r\n\r\nconst AdminPage = (props) => {\r\n    const { PREFIX,products, setProducts, newProduct, deletedProduct } = useContext(Context);\r\n\r\n    const [productTitle, setProductTitle] = useState('');\r\n    const fileInput = useRef();\r\n    const [newProductImage, setNewProductImage] = useState('');\r\n\r\n    const uploadImage = async () => {\r\n\r\n        const uploadedFile = fileInput.current;\r\n        axios.post(`http://localhost:5000${PREFIX}/uploadNewProductImage`, uploadedFile.files[0], {\r\n        // axios.post(`http://localhost:5000/uploadNewProductImage`, uploadedFile.files[0], {\r\n            params: { filename: uploadedFile.files[0].name },\r\n            onUploadProgress: (progressEvent) => {\r\n                const percentCompleted = Math.round(\r\n                    (progressEvent.loaded * 100) / progressEvent.total\r\n                );\r\n                console.log(\"percentCompleted:\", percentCompleted);\r\n                setNewProductImage(`http://localhost:5000/images/` + uploadedFile.files[0].name);\r\n                // setNewProductImage(`http://localhost:5000${PREFIX}/images/` + uploadedFile.files[0].name);\r\n            },\r\n        });\r\n        await console.log(\"newProductImage:\", newProductImage);\r\n\r\n    };\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log(\"values:\", values);\r\n        // console.log(uploadedFile.files[0]);\r\n\r\n        const newProduct = {\r\n            title: values.product.title,\r\n            image: newProductImage,\r\n            price: values.product.price,\r\n            description: values.product.description,\r\n            quantity: values.product.quantity,\r\n            pdf_description: values.product.pdf_description,\r\n        };\r\n\r\n        axios\r\n            .post(`http://127.0.0.1:5000${PREFIX}/products`, newProduct)\r\n            .then((res) => {\r\n                console.log(\"newProduct:\", newProduct)\r\n                console.log(res);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000${PREFIX}/products`)\r\n            .then((res) => {\r\n                const productsarray = res.data;\r\n                setProducts(productsarray);\r\n            });\r\n    }, [newProduct, deletedProduct]);\r\n    const idTodelete = useRef();\r\n    const idToUpdate = useRef();\r\n\r\n\r\n    const [selectedProductToDelete, setSelectedProductToDelete] = useState('');\r\n\r\n    function onChange(value, title) {\r\n        setSelectedProductToDelete(value);\r\n        setProductTitle(title.title)\r\n    }\r\n    function DeleteProduct() {\r\n        axios\r\n            .delete(`http://127.0.0.1:5000${PREFIX}/products/${selectedProductToDelete}`)\r\n            .then((res) => {\r\n                alert(`המוצר ${productTitle}, שמספרו המזהה ${selectedProductToDelete} נמחק`);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"adminPage\" dir=\"rtl\">\r\n            <Link to=\"/\">\r\n                <button className=\"Home_button\">חזור לדף הבית</button>\r\n\r\n            </Link>\r\n            < div className=\"delete_product\">\r\n                <h1>מחיקת מוצר </h1>\r\n\r\n                <Form\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"select\"\r\n                        label=\"Select\"\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'לא בחרת מוצר למחיקה',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"בחר מוצר למחיקה\"\r\n                            onChange={onChange}\r\n                        >\r\n                            {products.map((product) => (\r\n                                <Option key={product._id} value={product._id} title={product.title} >\r\n                                    {product.title}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n\r\n                    </Form.Item>\r\n                    <button className=\"send id\" onClick={DeleteProduct}>לחץ כדי למחוק</button>\r\n                    <input className=\"deletedProductInput\" type=\"text\" size=\"big\" ref={idTodelete} placeholder=\"  או הכנס את ה id של המוצר\" />\r\n\r\n                </Form>\r\n                <div className=\"update_quantity\">\r\n                    <h1>עדכון מלאי מוצר </h1>\r\n                    <input className=\"deletedProductInput\" type=\"text\" ref={idToUpdate} placeholder=\"של המוצר שברצונך לעדכן id הכנס את ה\" />\r\n                    <button className=\"send id\" onClick={idToUpdate}>לחץ כדי לעדכן</button>\r\n                </div>\r\n                <div className=\"newProductInPut\">\r\n\r\n                    <h1>הוספת מוצר חדש</h1>\r\n                    <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            ['input-number']: 0\r\n                        }}\r\n                        validateMessages={validateMessages}\r\n\r\n\r\n\r\n                    >\r\n                        <Form.Item\r\n                            name={[\"product\", \"title\"]}\r\n\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"כתוב את שם המוצר \" />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name={[\"product\", \"price\"]}\r\n                            key=\"מחיר המוצר\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <InputNumber placeholder=\"מחיר המוצר\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name={[\"product\", \"image\"]}\r\n                            key=\"תמונה\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}>\r\n                            <div>\r\n                                בחר את תמונת המוצר\r\n                            <input type=\"file\" placeholder=\"תמונת המוצר\" ref={fileInput} />\r\n\r\n                            </div>\r\n                        </Form.Item>\r\n\r\n                        {/* \r\n                        <Form.Item>\r\n                            <UploadImage />\r\n                        </Form.Item> */}\r\n                        {/* \r\n                        <Form.Item\r\n                            name={[\"product\", \"image\"]}\r\n                            rules={[\r\n                                {\r\n                                    required: false,\r\n                                },\r\n                            ]}\r\n                            getValueFromEvent={normFile}\r\n                        >\r\n\r\n                            <Upload.Dragger name=\"files\"\r\n                                action=\"/upload.do\"\r\n                            >\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <UploadOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">לחץ והוסף קובץ תמונה או גרור את הקובץ ישירות לתיבה זו</p>\r\n                            </Upload.Dragger>\r\n                        </Form.Item> */}\r\n\r\n                        <Form.Item\r\n                            name={[\"product\", \"quantity\"]}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <InputNumber placeholder=\"כמות במלאי\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            wrapperCol={{\r\n                                span: 6,\r\n                                offset: 6,\r\n                            }}\r\n                        >\r\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={props.addProduct}>\r\n                                שלח\r\n          </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <button className=\"uploadImage\" onClick={uploadImage}>העלה את התמונה שבחרת</button>\r\n\r\n                    {/* <input\r\n                    className=\"newProductTitle\"\r\n                    ref={title}\r\n                    placeholder=\"שם הפריט \"\r\n                />\r\n\r\n                <input\r\n                    className=\"newProductQuantity\"\r\n                    ref={quantity}\r\n                    placeholder=\"כמות במלאי\"\r\n                />\r\n                <input\r\n                    className=\"newProductPrice\"\r\n                    ref={price}\r\n                    placeholder=\"מחיר \"\r\n                />\r\n                <input\r\n                    className=\"newProductDescription\"\r\n                    ref={description}\r\n                    placeholder=\"מחיר \"\r\n                />\r\n                <img\r\n                    src=\"\"\r\n                /> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div >);\r\n\r\n}\r\n\r\nexport default AdminPage;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from '../../component/Context.js';\r\n\r\nfunction Login() {\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n    const { email, setEmail, password, setPassword, name, setName, userLogin, setUserLogin } = useContext(Context);\r\n\r\n    function validateForm() {\r\n\r\n        return email.length > 0 && password.length > 0;\r\n\r\n    }\r\n\r\n    function changeName() {\r\n        setUserLogin(true)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"name\" bsSize=\"large\">\r\n                    <ControlLabel>Name</ControlLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"string\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                    <ControlLabel>Email</ControlLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                    <ControlLabel>Password</ControlLabel>\r\n                    <FormControl\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <Link to={`/`}>\r\n\r\n                    <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\" onClick={changeName}>\r\n                        Login\r\n        </Button>\r\n                </Link>\r\n\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\nexport default Login;","import React, { useState, useContext,useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Product from '../component/product/product.js'\r\nimport Context from '../../src/component/Context.js';\r\n\r\nconst ProductPage = (props) => {\r\n    const {PREFIX } = useContext(Context);\r\n    let [chosenProduct, setChosenProduct] =useState ('');\r\n\r\n    const { id } = useParams();\r\n            \r\n    useEffect(() => {\r\n        const url = `http://localhost:5000${PREFIX}/products/${id}`\r\n        axios.get(url)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                const products = res.data;\r\n                const find = products.find((chosenProduct) => chosenProduct._id === id);\r\n                console.log(find);\r\n                setChosenProduct(find)\r\n            })\r\n        console.log(chosenProduct);\r\n    }, []);\r\n\r\n\r\n    \r\n    // useEffect(() => {\r\n    //     // const params = { search: search }\r\n    //     axios.get(\"http://localhost:5000/products\", { params: params })\r\n    //       .then((res) => {\r\n    //         // console.log(res);\r\n    //         const productsArray = res.data;\r\n    //         console.log(productsArray);\r\n    //         setProducts(res.data);\r\n    //       });\r\n    //   }, [search]);\r\n    //   console.log(useProductsState);\r\n    return (\r\n        <div>\r\n        <div>דף מידע</div>\r\n        {/* { chosen } */}\r\n       \r\n        <div>\r\n            \r\n         <h1>{chosenProduct.title}</h1>\r\n            <img src={chosenProduct.image} /> \r\n             <h2>תיאור:</h2>\r\n             <h2>  {chosenProduct.description}</h2>\r\n          <h2>מחיר:{chosenProduct.price}ש\"ח</h2>  \r\n\r\n            <Link to=\"/\">Home</Link>\r\n\r\n         </div >\r\n         </div >\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, { useContext } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport Context from '../Context';\r\n\r\nfunction Search() {\r\n\r\n    const { Search } = Input;\r\n    const { setUserSearch } = useContext(Context);\r\n\r\n    const suffix = (\r\n        <AudioOutlined\r\n            style={{\r\n                fontSize: 16,\r\n                color: '#1890ff',\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"input search text\"\r\n                enterButton=\"Search\"\r\n                size=\"large\"\r\n                suffix={suffix}\r\n                onSearch={value => setUserSearch(value)}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Search;\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport \"./app.css\";\r\nimport Header from \"../header/Header\";\r\nimport Products from \"../products/Products.js\";\r\nimport AdminPage from \"../../pages/adminPage/AdminPage.js\"\r\n\r\nimport { Slider } from \"antd\";\r\nimport Login from \"../login/Login.js\"\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport ProductPage from '../../pages/productPage.js'\r\nimport Search from \"../search/Search.js\"\r\nimport axios from \"axios\";\r\nimport { useRef } from \"react\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport { Provider } from '../Context.js'\r\n\r\n// i need to relearn the use of this option\r\n// const useCounterState = createPersistedState(\"count\");\r\n\r\n// const Routes = require('../../../../ProductController/Product.Route.js');\r\n// App.use('/', Routes);\r\n// app.use(cors());\r\n\r\n\r\nfunction App(props) {\r\n  const PREFIX = \"/api\";\r\n  const [productsFromDB, setProductsFromDB] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [cartCharge, setCartCharge] = useState(0);\r\n  const [itemsInCart, setItemsInCart] = useState([]);\r\n  const [count, setCount] = useState('');\r\n  const [userSearch, setUserSearch] = useState(null);\r\n  const [productQuantity, setProductQuantity] = useState(props.quantity);\r\n  const [deletedProduct, setDeletedProduct] = useState({});\r\n  const [newProduct, setNewProduct] = useState({});\r\n  const [userImage, setUserImage] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cartId, setCartId] = useState('');\r\n  const [userLogin, setUserLogin] = useState(false);\r\n\r\n  const [range, setRange] = useState([0, 100]);\r\n  let userRange = (value) => {\r\n    setRange(value);\r\n  }\r\n  // console.log(\"userSearch:\", userSearch);\r\n  console.log(\"userSearch:\", userSearch);\r\n\r\n  document.cookie = \"isLogIn=1\";\r\n  document.cookie = \"isLogIn=2\";\r\n  document.cookie = \"username=3; expires= sun, 1 aug 2021; path=/login\";\r\n  console.log(document.cookie);\r\n\r\n\r\n  const shopContext = {\r\n    PREFIX: PREFIX,\r\n    productsFromDB: productsFromDB,\r\n    products: products,\r\n    setProducts: (value) => setProducts(value),\r\n    cartCount: cartCount,\r\n    setCartCount: (value) => setCartCount(value),\r\n    // cartCharge: cartCharge,\r\n    // setCartCharge: (value) => setCartCharge(value),\r\n    itemsInCart: itemsInCart,\r\n    setItemsInCart: (value) => setItemsInCart(value),\r\n    userSearch: userSearch,\r\n    setUserSearch: (value) => setUserSearch(value),\r\n\r\n    deletedProduct: deletedProduct,\r\n    setDeletedProduct: (value) => setDeletedProduct(value),\r\n    newProduct: newProduct,\r\n    setNewProduct: (value) => setNewProduct(value),\r\n    userImage: userImage,\r\n    setUserImage: (value) => setUserImage(value),\r\n    email: email,\r\n    setEmail: (value) => setEmail(value),\r\n    password: password,\r\n    setPassword: (value) => setPassword(value),\r\n    name: name,\r\n    setName: (value) => setName(value),\r\n    cartId: cartId,\r\n    setCartId: (value) => setCartId(value),\r\n    userLogin: userLogin,\r\n    setUserLogin: (value) => setUserLogin(value),\r\n\r\n  }\r\n\r\n  // localStorage.setItem(\"check\", JSON.stringify([\r\n  //   {\r\n  //     id: 1,\r\n  //     title: \"myProduct\"\r\n  //   }\r\n  // ])\r\n  // );\r\n  const localStorageValue = (\"localStorage:\", JSON.parse(localStorage.getItem(\"check\")));\r\n  // console.log(\"localStorage:\", localStorageValue[0].title);\r\n\r\n\r\n  // console.log(\"value search:\", value);\r\n\r\n  // moved to seperate component and to Cart component\r\n  // const [userImage, setUserImage] = useState(\"\");\r\n\r\n  // const fileInput = useRef();\r\n  // const uploadImage = () => {\r\n  //   const uploadedFile = fileInput.current;\r\n  //   axios.post(\"http://localhost:5000/upload\", uploadedFile.files[0], {\r\n  //     params: { filename: uploadedFile.files[0].name },\r\n  //     onUploadProgress: (progressEvent) => {\r\n  //       const percentCompleted = Math.round(\r\n  //         (progressEvent.loaded * 100) / progressEvent.total\r\n  //       );\r\n  //       console.log(\"percentCompleted:\", percentCompleted);\r\n  //       setUserImage(\"http://localhost:5000/images/\" + uploadedFile.files[0].name);\r\n  //     },\r\n  //   });\r\n  // };\r\n  // console.log(userImage);\r\n\r\n\r\n  // giving the user the full list of the products\r\n\r\n  async function getProductsList() {\r\n    let data;\r\n    try {\r\n      ({ data } = await axios.get(`http://localhost:5000${PREFIX}/products`));\r\n    } catch (e) {\r\n      data = loadProducts();\r\n    }\r\n    const products = document.getElementById(\"products\");\r\n    data.forEach((product) => {\r\n      const productLi = `<li>${product.title}</li>`;\r\n      products.innerHTML += productLi;\r\n    });\r\n    saveProducts(data);\r\n  }\r\n  // i need to move this method and to use it (the local storage) to users and not to all the products\r\n  function saveProducts(products) {\r\n    // localStorage.setItem(\"products\", JSON.stringify(products));\r\n    localStorage.setItem(\"products\", JSON.stringify(products));\r\n  }\r\n  function loadProducts() {\r\n    const products = localStorage.getItem(\"products\");\r\n    return products ? JSON.parse(products) : [];\r\n  }\r\n\r\n  useEffect(() => {\r\n    // const socket = socketIOClient(`http://localhost:5000${PREFIX}`);\r\n    const socket = socketIOClient(`http://localhost:5000`);\r\n    socket.on(\"product_deleted\", (data) => {\r\n      setDeletedProduct(data);\r\n      // setProducts(updatedProducts);\r\n\r\n      setTimeout(() => setDeletedProduct({}), 3000);\r\n    });\r\n  }, []);\r\n\r\n\r\n  // new product added- update products DB and client with socket io\r\n  useEffect(() => {\r\n    // const socket = socketIOClient(`http://localhost:5000${PREFIX}`);\r\n    const socket = socketIOClient(`http://localhost:5000`);\r\n    socket.on(\"product_added\", (data) => {\r\n      setNewProduct(data);\r\n\r\n      setTimeout(() => setNewProduct({}), 3000);\r\n    });\r\n  }, [newProduct]);\r\n\r\n  return (\r\n    <Provider value={shopContext}>\r\n      <Router>\r\n        <div className=\"app\">\r\n\r\n\r\n          <Header className=\"heder_component\" />\r\n          <div style={{ padding: \"30px\" }}>\r\n            {newProduct && newProduct.title &&\r\n              <div>שים לב! מוצר חדש אפשרי לקניה {newProduct.title}</div>}\r\n            {deletedProduct && deletedProduct.title &&\r\n              <div>כבר לא זמין לקניה{deletedProduct.title}שים לב! המוצר </div>}\r\n\r\n          </div>\r\n\r\n          <button className=\"get_products_button\" onClick={getProductsList}>products list</button>\r\n          <button className=\"local_storage_button\" onClick={() => setCount((currentCount) => currentCount + 1)}>{count}localstorage</button>\r\n\r\n          {/* now i need to use this option to save on localstorage the users coose of products to bye so he won't loose his chooses from time to time/ i need to use this speacal state option on the buttons that count the bumbers in cartm,for example */}\r\n          <ul id=\"products\"></ul>\r\n\r\n          <Search />\r\n          <Switch>\r\n\r\n            <Route exact path={`/adminLogIn`}>\r\n              <AdminPage />\r\n            </Route>\r\n\r\n            <Route exact path={`/Login`}>\r\n              <Login />\r\n            </Route>\r\n\r\n            <Route exact path={`/`}>\r\n\r\n              <Slider range defaultValue={[0, 100]} onChange={userRange} />\r\n              <Products\r\n                range={range}\r\n\r\n                userSearch={userSearch}\r\n                userImage={userImage}\r\n              />\r\n              <div style={{ padding: \"30px\" }}>\r\n                {newProduct && newProduct.title &&\r\n                  <div>שים לב! מוצר חדש אפשרי לקניה {newProduct.title}</div>}\r\n                {deletedProduct && deletedProduct.title &&\r\n                  <div>כבר לא זמין לקניה{deletedProduct.title}שים לב! המוצר </div>\r\n                }\r\n              </div>\r\n            </Route>\r\n\r\n            <Route path={`/products/:id`}>\r\n              <ProductPage />\r\n            </Route>\r\n\r\n\r\n          </Switch>\r\n\r\n        </div>\r\n\r\n      </Router>\r\n    </Provider >\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/app/app.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}